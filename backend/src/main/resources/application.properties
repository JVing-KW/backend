spring.profiles.active=local
spring.application.name=estEducation

# 정적 리소스에 변화가 있을 때 바로 반영한다.
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true


## server 설정
	#port
	server.port=80
	server.tomcat.relaxed-query-chars=|,{,},[,],^


## myBatis 설정
	#쿼리 로그온 설정
	logging.level.jdbc.sqlonly=off
	logging.level.jdbc.sqltiming=info
	logging.level.jdbc.resultsettable=info
	logging.level.jdbc.audit=off
	logging.level.jdbc.resultset=off
	logging.level.jdbc.connection=off
	mybatis.mapper-locations:classpath:mapper/**/*.xml


## DB 설정
	#접속정보
	spring.datasource.url=jdbc:mariadb://estsw-rds-mariadb-edu.che0sy2qqx6s.ap-northeast-2.rds.amazonaws.com/est_eep_db?serverTimezone=Asia/Seoul
	spring.datasource.username=admin
	spring.datasource.password=admin123!!
	spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
	mybatis.config-location=classpath:mybatis/config/mybatis-config.xml

logging.level.org.springframework=info
logging.level.org.board=debug

## JPA 설정
	#Dialect 설정
	spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
	#하이버네이트가 실행하는 모든 SQL문을 콘솔로 출력해 준다.
	spring.jpa.properties.hibernate.show_sql=true
	#콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현한다.
	spring.jpa.properties.hibernate.format_sql=true
	#디버깅이 용이하도록 SQL문 이외에 추가적인 정보를 출력해 준다.
	#여기서부터 주입 
	spring.jpa.properties.hibernate.use_sql_comments=true
	spring.jpa.show-sql=true
	spring.jpa.hibernate.ddl-auto=none
	spring.h2.console.enabled=true
    spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

	

## View 설정
	#thymeleaf 설정
	spring.thymeleaf.enabled=true
	spring.thymeleaf.mode=HTML 
	spring.thymeleaf.encoding=UTF-8
	spring.thymeleaf.check-template-location=true
	spring.thymeleaf.prefix=classpath:/templates/
	spring.thymeleaf.suffix=.html
	spring.thymeleaf.cache=false
	spring.thymeleaf.view-names=pages/**

	# CSS, JS 파일 경로
	spring.mvc.static-path-pattern=/static/**
	
## Mail	// https://henniee.tistory.com/217 참고 링크
	spring.mail.host=smtp.gmail.com
	spring.mail.port=587
	spring.mail.username=walkingongreenball@gmail.com	// 본인 또는 회사 아이디로 교체
	spring.mail.password=lopq jelw gspn fqux			// 참고 링크에 따라 제공받은 비밀번호 사용
	spring.mail.properties.smtp.auth=true				// 이메일 서버에 인증 요구
	spring.mail.properties.smtp.starttls.enable=true	// 암호화된 연결을 활성화. starttls는 이메일 전송중에 보안 계층을 추가하여 데이터의 기밀성을 보호
	spring.mail.properties.smtp.connectiontimeout=18000	// SMTP 서버에 대한 연결 시도 시, 연결 제한 시간 설정
	spring.mail.properties.smtp.timeout=18000			// SMTP 서버와의 통신 시간 제한 설정
	spring.mail.properties.smtp.writetimeout=18000		// SMTP 서버에 데이터를 전송하는 시간 제한 설정
	
## naver Oauth2 // https://henniee.tistory.com/m/238 링크 참조
	spring.security.oauth2.client.registration.naver.client-id=TIwA7WnbAvnjEwnbPGZm		// 본인 또는 회사 아이디로 교체
	spring.security.oauth2.client.registration.naver.client-secret=Qbh0YK_yrf			// 참고 링크에 따라 제공받은 비밀번호 사용
	spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
	spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver

# 파일 업로드 디렉토리 설정
	file.upload-dir=C:/uploads/
